apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dummy
  name: dummy
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dummy
  template:
    metadata:
      labels:
        app: dummy
    spec:
      containers:
      - image: czdev/blue
        name: dummy
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: dummy
  name: dummy
  namespace: project
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: grpc-client
  type: LoadBalancer
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
  name: dummy-ingress
  namespace: project
spec:
  rules:
    - host: dummy.sopes1.tk
      http:
        paths:
          - backend:
              serviceName: dummy
              servicePort: 80
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    ingress.kubernetes.io/rewrite-target: /
  name: blue-ingress
  namespace: project
spec:
  rules:
    - host: blue.sopes1.tk
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: grpc-client-service
              port:
                number: 80
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
    ingress.kubernetes.io/rewrite-target: /
  name: green-ingress
  namespace: project
spec:
  rules:
    - host: green.sopes1.tk
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: kafka-consumer-service
              port:
                number: 80
---
apiVersion: split.smi-spec.io/v1alpha1
kind: TrafficSplit
metadata:
  name: function-split
  namespace: project
spec:
  service: dummy
  backends:
  - service: grpc-client-service
    weight: 500m
  - service: kafka-consumer-service
    weight: 500m
